taylor is a small library for solving the initial value problem of ordinary differential equations by means of the taylor series method. It is an add-on for odeint and will be one time part of the library.

The taylor series methods works by calculating the taylor coefficients of the state of an ordinary differential equation. There are already libraries for this method but most of the lack of uniqueness. One has to define the ordinary differential equation in an addition application or language like Mathematica which it the evaluated.

The taylor library uses C++ for this task. The ordinary differential equation is represented as an expression tree which can be build by the standard operators +,-,/,*. Hence it provides an unique and human readable C++ interface. The expression tree is the transformed into an evaluable tree with the help of boost.proto.

An example is the Lorenz system which should by passed and evaluated like:

taylor.do_step( make_vector(
    sigma * ( arg2 - arg1 ) ,
    R * arg1 - arg2 - arg1 * arg3 ,
    arg1 * arg2 - b * arg3 ) , x , t , dt );

Note, arg1, arg2, arg3 are here placeholders for the variable x,y,z of the Lorenz system. In an preliminary version of taylor it has been shown that the performance is better or at least equal to hand written version Fortran code. Hence, taylor is a promising candidate for the Taylor series method.
